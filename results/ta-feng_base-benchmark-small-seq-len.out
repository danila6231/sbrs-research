/gpfs/home/danila/sbrs-research/.venv/lib64/python3.9/site-packages/ray/_private/parameter.py:4: UserWarning: pkg_resources is deprecated as an API. See https://setuptools.pypa.io/en/latest/pkg_resources.html. The pkg_resources package is slated for removal as early as 2025-11-30. Refrain from using this package or pin to Setuptools<81.
  import pkg_resources
06 Jun 18:49    INFO  ['run_base.py', '--MAX_ITEM_LIST_LENGTH=5']
06 Jun 18:49    INFO  
General Hyper Parameters:
gpu_id = 0
use_gpu = True
seed = 2020
state = INFO
reproducibility = True
data_path = dataset/ta-feng
checkpoint_dir = saved
show_progress = False
save_dataset = False
dataset_save_path = None
save_dataloaders = False
dataloaders_save_path = None
log_wandb = False

Training Hyper Parameters:
epochs = 200
train_batch_size = 128
learner = adam
learning_rate = 0.001
train_neg_sample_args = {'distribution': 'none', 'sample_num': 'none', 'alpha': 'none', 'dynamic': False, 'candidate_num': 0}
eval_step = 1
stopping_step = 10
clip_grad_norm = None
weight_decay = 0.0
loss_decimal_place = 4

Evaluation Hyper Parameters:
eval_args = {'split': {'LS': 'valid_and_test'}, 'order': 'TO', 'group_by': 'user', 'mode': {'valid': 'uni100', 'test': 'uni100'}}
repeatable = True
metrics = ['NDCG', 'MRR', 'Hit']
topk = [10]
valid_metric = NDCG@10
valid_metric_bigger = True
eval_batch_size = 128
metric_decimal_place = 4

Dataset Hyper Parameters:
field_separator = 	
seq_separator =  
USER_ID_FIELD = customer_id
ITEM_ID_FIELD = product_id
RATING_FIELD = rating
TIME_FIELD = transaction_date
seq_len = None
LABEL_FIELD = label
threshold = None
NEG_PREFIX = neg_
load_col = {'inter': ['transaction_date', 'customer_id', 'product_id'], 'user': ['customer_id', 'age_group', 'pin_code']}
unload_col = None
unused_col = None
additional_feat_suffix = None
rm_dup_inter = None
val_interval = None
filter_inter_by_user_or_item = True
user_inter_num_interval = [0,inf)
item_inter_num_interval = [0,inf)
alias_of_user_id = None
alias_of_item_id = None
alias_of_entity_id = None
alias_of_relation_id = None
preload_weight = None
normalize_field = None
normalize_all = None
ITEM_LIST_LENGTH_FIELD = item_length
LIST_SUFFIX = _list
MAX_ITEM_LIST_LENGTH = 5
POSITION_FIELD = position_id
HEAD_ENTITY_ID_FIELD = head_id
TAIL_ENTITY_ID_FIELD = tail_id
RELATION_ID_FIELD = relation_id
ENTITY_ID_FIELD = entity_id
benchmark_filename = None

Other Hyper Parameters: 
worker = 0
wandb_project = recbole
shuffle = True
require_pow = False
enable_amp = True
enable_scaler = False
transform = None
n_layers = 2
n_heads = 2
hidden_size = 64
inner_size = 256
hidden_dropout_prob = 0.2
attn_dropout_prob = 0.2
hidden_act = gelu
layer_norm_eps = 1e-12
initializer_range = 0.02
loss_type = CE
numerical_features = []
discretization = None
kg_reverse_r = False
entity_kg_num_interval = [0,inf)
relation_kg_num_interval = [0,inf)
MODEL_TYPE = ModelType.SEQUENTIAL
embedding_size = 64
feature_emb_hidden_size = 32
pooling_mode = sum
MODEL_INPUT_TYPE = InputType.POINTWISE
eval_type = EvaluatorType.RANKING
single_spec = True
local_rank = 0
device = cuda
valid_neg_sample_args = {'distribution': 'uniform', 'sample_num': 100}
test_neg_sample_args = {'distribution': 'uniform', 'sample_num': 100}


/gpfs/home/danila/sbrs-research/.venv/lib64/python3.9/site-packages/recbole/data/dataset/dataset.py:650: FutureWarning: A value is trying to be set on a copy of a DataFrame or Series through chained assignment using an inplace method.
The behavior will change in pandas 3.0. This inplace method will never work because the intermediate object on which we are setting values always behaves as a copy.

For example, when doing 'df[col].method(value, inplace=True)', try using 'df.method({col: value}, inplace=True)' or df[col] = df[col].method(value) instead, to perform the operation inplace on the original object.


  feat[field].fillna(value=feat[field].mean(), inplace=True)
/gpfs/home/danila/sbrs-research/.venv/lib64/python3.9/site-packages/recbole/data/dataset/dataset.py:648: FutureWarning: A value is trying to be set on a copy of a DataFrame or Series through chained assignment using an inplace method.
The behavior will change in pandas 3.0. This inplace method will never work because the intermediate object on which we are setting values always behaves as a copy.

For example, when doing 'df[col].method(value, inplace=True)', try using 'df.method({col: value}, inplace=True)' or df[col] = df[col].method(value) instead, to perform the operation inplace on the original object.


  feat[field].fillna(value=0, inplace=True)
06 Jun 18:49    INFO  ta-feng
The number of users: 32267
Average actions of users: 25.343736440835553
The number of items: 23813
Average actions of items: 34.34155047875021
The number of inters: 817741
The sparsity of the dataset: 99.8935751438182%
Remain Fields: ['transaction_date', 'customer_id', 'product_id', 'age_group', 'pin_code']
06 Jun 18:49    INFO  [Training]: train_batch_size = [128] train_neg_sample_args: [{'distribution': 'none', 'sample_num': 'none', 'alpha': 'none', 'dynamic': False, 'candidate_num': 0}]
06 Jun 18:49    INFO  [Evaluation]: eval_batch_size = [128] eval_args: [{'split': {'LS': 'valid_and_test'}, 'order': 'TO', 'group_by': 'user', 'mode': {'valid': 'uni100', 'test': 'uni100'}}]
06 Jun 18:49    INFO  SASRec(
  (item_embedding): Embedding(23813, 64, padding_idx=0)
  (position_embedding): Embedding(5, 64)
  (trm_encoder): TransformerEncoder(
    (layer): ModuleList(
      (0-1): 2 x TransformerLayer(
        (multi_head_attention): MultiHeadAttention(
          (query): Linear(in_features=64, out_features=64, bias=True)
          (key): Linear(in_features=64, out_features=64, bias=True)
          (value): Linear(in_features=64, out_features=64, bias=True)
          (softmax): Softmax(dim=-1)
          (attn_dropout): Dropout(p=0.2, inplace=False)
          (dense): Linear(in_features=64, out_features=64, bias=True)
          (LayerNorm): LayerNorm((64,), eps=1e-12, elementwise_affine=True)
          (out_dropout): Dropout(p=0.2, inplace=False)
        )
        (feed_forward): FeedForward(
          (dense_1): Linear(in_features=64, out_features=256, bias=True)
          (dense_2): Linear(in_features=256, out_features=64, bias=True)
          (LayerNorm): LayerNorm((64,), eps=1e-12, elementwise_affine=True)
          (dropout): Dropout(p=0.2, inplace=False)
        )
      )
    )
  )
  (LayerNorm): LayerNorm((64,), eps=1e-12, elementwise_affine=True)
  (dropout): Dropout(p=0.2, inplace=False)
  (loss_fct): CrossEntropyLoss()
)
Trainable parameters: 1624448
06 Jun 18:49    INFO  FLOPs: 495704.0
/gpfs/home/danila/sbrs-research/.venv/lib64/python3.9/site-packages/recbole/trainer/trainer.py:235: FutureWarning: `torch.cuda.amp.GradScaler(args...)` is deprecated. Please use `torch.amp.GradScaler('cuda', args...)` instead.
  scaler = amp.GradScaler(enabled=self.enable_scaler)
06 Jun 18:52    INFO  epoch 0 training [time: 207.50s, train loss: 49940.2887]
06 Jun 18:53    INFO  epoch 0 evaluating [time: 65.94s, valid_score: 0.437200]
06 Jun 18:53    INFO  valid result: 
ndcg@10 : 0.4372    mrr@10 : 0.3678    hit@10 : 0.6618
06 Jun 18:53    INFO  Saving current: saved/SASRec-Jun-06-2025_18-49-17.pth
06 Jun 18:57    INFO  epoch 1 training [time: 207.07s, train loss: 48843.0244]
06 Jun 18:58    INFO  epoch 1 evaluating [time: 65.15s, valid_score: 0.465500]
06 Jun 18:58    INFO  valid result: 
ndcg@10 : 0.4655    mrr@10 : 0.3961    hit@10 : 0.6893
06 Jun 18:58    INFO  Saving current: saved/SASRec-Jun-06-2025_18-49-17.pth
06 Jun 19:01    INFO  epoch 2 training [time: 203.66s, train loss: 48093.4683]
06 Jun 19:03    INFO  epoch 2 evaluating [time: 65.95s, valid_score: 0.479300]
06 Jun 19:03    INFO  valid result: 
ndcg@10 : 0.4793    mrr@10 : 0.4105    hit@10 : 0.7002
06 Jun 19:03    INFO  Saving current: saved/SASRec-Jun-06-2025_18-49-17.pth
06 Jun 19:06    INFO  epoch 3 training [time: 207.95s, train loss: 47500.2083]
06 Jun 19:07    INFO  epoch 3 evaluating [time: 65.87s, valid_score: 0.486500]
06 Jun 19:07    INFO  valid result: 
ndcg@10 : 0.4865    mrr@10 : 0.4192    hit@10 : 0.7032
06 Jun 19:07    INFO  Saving current: saved/SASRec-Jun-06-2025_18-49-17.pth
06 Jun 19:11    INFO  epoch 4 training [time: 207.67s, train loss: 47005.0465]
06 Jun 19:12    INFO  epoch 4 evaluating [time: 65.87s, valid_score: 0.486000]
06 Jun 19:12    INFO  valid result: 
ndcg@10 : 0.486    mrr@10 : 0.4189    hit@10 : 0.7021
06 Jun 19:15    INFO  epoch 5 training [time: 207.88s, train loss: 46576.9649]
06 Jun 19:16    INFO  epoch 5 evaluating [time: 65.89s, valid_score: 0.486900]
06 Jun 19:16    INFO  valid result: 
ndcg@10 : 0.4869    mrr@10 : 0.4202    hit@10 : 0.7012
06 Jun 19:16    INFO  Saving current: saved/SASRec-Jun-06-2025_18-49-17.pth
06 Jun 19:20    INFO  epoch 6 training [time: 207.71s, train loss: 46209.8500]
06 Jun 19:21    INFO  epoch 6 evaluating [time: 65.85s, valid_score: 0.484700]
06 Jun 19:21    INFO  valid result: 
ndcg@10 : 0.4847    mrr@10 : 0.4182    hit@10 : 0.6988
06 Jun 19:24    INFO  epoch 7 training [time: 207.92s, train loss: 45902.0786]
06 Jun 19:25    INFO  epoch 7 evaluating [time: 65.58s, valid_score: 0.484200]
06 Jun 19:25    INFO  valid result: 
ndcg@10 : 0.4842    mrr@10 : 0.4181    hit@10 : 0.697
06 Jun 19:29    INFO  epoch 8 training [time: 202.31s, train loss: 45635.8792]
06 Jun 19:30    INFO  epoch 8 evaluating [time: 65.84s, valid_score: 0.481100]
06 Jun 19:30    INFO  valid result: 
ndcg@10 : 0.4811    mrr@10 : 0.4143    hit@10 : 0.6962
06 Jun 19:33    INFO  epoch 9 training [time: 207.47s, train loss: 45414.1179]
06 Jun 19:34    INFO  epoch 9 evaluating [time: 65.43s, valid_score: 0.481800]
06 Jun 19:34    INFO  valid result: 
ndcg@10 : 0.4818    mrr@10 : 0.416    hit@10 : 0.6932
06 Jun 19:38    INFO  epoch 10 training [time: 206.82s, train loss: 45231.9269]
06 Jun 19:39    INFO  epoch 10 evaluating [time: 65.30s, valid_score: 0.481800]
06 Jun 19:39    INFO  valid result: 
ndcg@10 : 0.4818    mrr@10 : 0.4162    hit@10 : 0.6928
06 Jun 19:42    INFO  epoch 11 training [time: 206.76s, train loss: 45076.1742]
06 Jun 19:43    INFO  epoch 11 evaluating [time: 65.29s, valid_score: 0.479800]
06 Jun 19:43    INFO  valid result: 
ndcg@10 : 0.4798    mrr@10 : 0.4145    hit@10 : 0.6901
06 Jun 19:47    INFO  epoch 12 training [time: 206.49s, train loss: 44934.1940]
06 Jun 19:48    INFO  epoch 12 evaluating [time: 64.97s, valid_score: 0.477400]
06 Jun 19:48    INFO  valid result: 
ndcg@10 : 0.4774    mrr@10 : 0.4123    hit@10 : 0.687
06 Jun 19:51    INFO  epoch 13 training [time: 206.08s, train loss: 44818.6954]
06 Jun 19:52    INFO  epoch 13 evaluating [time: 65.06s, valid_score: 0.478400]
06 Jun 19:52    INFO  valid result: 
ndcg@10 : 0.4784    mrr@10 : 0.4122    hit@10 : 0.6912
06 Jun 19:56    INFO  epoch 14 training [time: 200.26s, train loss: 44727.4920]
06 Jun 19:57    INFO  epoch 14 evaluating [time: 64.38s, valid_score: 0.478700]
06 Jun 19:57    INFO  valid result: 
ndcg@10 : 0.4787    mrr@10 : 0.4132    hit@10 : 0.6895
06 Jun 20:00    INFO  epoch 15 training [time: 206.24s, train loss: 44633.5372]
06 Jun 20:01    INFO  epoch 15 evaluating [time: 65.02s, valid_score: 0.479700]
06 Jun 20:01    INFO  valid result: 
ndcg@10 : 0.4797    mrr@10 : 0.4143    hit@10 : 0.6899
06 Jun 20:05    INFO  epoch 16 training [time: 206.12s, train loss: 44553.6669]
06 Jun 20:06    INFO  epoch 16 evaluating [time: 64.88s, valid_score: 0.475600]
06 Jun 20:06    INFO  valid result: 
ndcg@10 : 0.4756    mrr@10 : 0.4099    hit@10 : 0.6864
06 Jun 20:06    INFO  Finished training, best eval result in epoch 5
/gpfs/home/danila/sbrs-research/.venv/lib64/python3.9/site-packages/recbole/trainer/trainer.py:583: FutureWarning: You are using `torch.load` with `weights_only=False` (the current default value), which uses the default pickle module implicitly. It is possible to construct malicious pickle data which will execute arbitrary code during unpickling (See https://github.com/pytorch/pytorch/blob/main/SECURITY.md#untrusted-models for more details). In a future release, the default value for `weights_only` will be flipped to `True`. This limits the functions that could be executed during unpickling. Arbitrary objects will no longer be allowed to be loaded via this mode unless they are explicitly allowlisted by the user via `torch.serialization.add_safe_globals`. We recommend you start setting `weights_only=True` for any use case where you don't have full control of the loaded file. Please open an issue on GitHub for any issues related to this experimental feature.
  checkpoint = torch.load(checkpoint_file, map_location=self.device)
06 Jun 20:06    INFO  Loading model structure and parameters from saved/SASRec-Jun-06-2025_18-49-17.pth
06 Jun 20:07    INFO  The running environment of this training is as follows:
+-------------+-----------------+
| Environment |      Usage      |
+=============+=================+
| CPU         |     45.90 %     |
+-------------+-----------------+
| GPU         |  0.08 G/9.50 G  |
+-------------+-----------------+
| Memory      | 1.81 G/503.00 G |
+-------------+-----------------+
06 Jun 20:07    INFO  best valid : OrderedDict([('ndcg@10', 0.4869), ('mrr@10', 0.4202), ('hit@10', 0.7012)])
06 Jun 20:07    INFO  test result: OrderedDict([('ndcg@10', 0.4982), ('mrr@10', 0.4335), ('hit@10', 0.706)])
